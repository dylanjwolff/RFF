FROM schedfuzz-base


# build / install target
WORKDIR /opt/sched-fuzz

RUN apt install -y python2
RUN apt-get install gcc-multilib -y
RUN apt-get install libnspr4 -y
RUN git clone https://github.com/mc-imperial/sctbench.git

WORKDIR sctbench/benchmarks
RUN sed -i 's/\/usr\/bin\/env python/\/usr\/bin\/python2/g' **/*.py
RUN cd parsec-2.0; grep -rl "HUGE" pkgs/apps/ferret | xargs sed -i "s/HUGE/DBL_MAX/g"

# build bugX
COPY scripts/sctbench-scripts/buildBugX.sh buildBugX.sh
RUN chmod 777 buildBugX.sh
RUN ./buildBugX.sh


WORKDIR ..
ENV ROOT=/opt/sched-fuzz/sctbench
RUN ./scripts/build_benchmarks

ENV INPUTS=/opt/sched-fuzz/input

WORKDIR /opt/sched-fuzz

RUN git clone https://github.com/google/AFL.git
# Stop AFL from exiting if the initial test-case crashes
RUN cd AFL; sed -i 's/  FATAL("Test case .* crash.*//' afl-fuzz.c; make

COPY scripts/sctbench-scripts/one.py one.py
COPY scripts/sctbench-scripts/dump_config.py dump_config.py
RUN python3 dump_config.py

# run (target specific)
CMD python3 one.py

