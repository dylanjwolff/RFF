FROM schedfuzz-base

RUN apt install -y yasm nasm
WORKDIR /opt
RUN git clone https://github.com/webmproject/libvpx.git
WORKDIR /opt/libvpx
ENV CFLAGS=-g
ENV CXXFLAGS=-g
RUN ./configure --disable-shared
RUN make
# ENV SUT_NAME=vpxdec
ENV SUT_NAME=vpxenc
ENV PROJ_NAME=libvpx

ENV UNINST=/opt/libvpx/$SUT_NAME

COPY seeds/avi /opt/afl-testcases
ENV INPUTS=/opt/afl-testcases

# Steps to run
# ------------

# e9afl instrument

WORKDIR /opt/sched-fuzz
RUN ./instrument.sh $UNINST

ENV ARGS=" @@ -w 640 -h 360 --threads=4 -o dest.vpx"
# only takes 1st arg, so i.e. a random input
# RUN python3 ./dynamic-pp.py $INPUTS/*
# COPY out.csv /opt/out

RUN cp threading_events/$PROJ_NAME/$SUT_NAME/out.csv .
RUN ./selective-instrument.sh $UNINST out.csv

# run (target specific)

# encode
CMD ./fuzz.sh -i $INPUTS -o /opt/out -d -t 68000 -- ./$SUT_NAME.afl @@ -w 640 -h 360 --threads=4 -o dest.vpx


# remove sudo for privileged docker container
# sudo sysctl -w kernel.core_pattern="core-%e"
# cd /sys/devices/system/cpu; echo performance | sudo tee cpu*/cpufreq/scaling_governor

# docker build . -t fuzzer
# mkdir out
# docker run -v $(pwd)/out:/opt/run fuzzer

